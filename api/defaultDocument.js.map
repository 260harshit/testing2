{"version":3,"sources":["../src/defaultDocument.ts"],"sourcesContent":["export const defaultDocument = `\nquery GetPokemon(\n  $pokemon: PokemonEnum!\n  $offsetFlavorTexts: Int\n  $takeFlavorTexts: Int\n  $reverseFlavorTexts: Boolean\n) {\n  getPokemon(\n    pokemon: $pokemon\n    offsetFlavorTexts: $offsetFlavorTexts\n    takeFlavorTexts: $takeFlavorTexts\n    reverseFlavorTexts: $reverseFlavorTexts\n  ) {\n    ...FullData\n  }\n}\n\nfragment GenerationalPokemonLearnsetFragment on GenerationalPokemonLearnset {\n  generation3 {\n    ...PokemonLearnsetFragment\n  }\n  generation4 {\n    ...PokemonLearnsetFragment\n  }\n  generation5 {\n    ...PokemonLearnsetFragment\n  }\n  generation6 {\n    ...PokemonLearnsetFragment\n  }\n  generation7 {\n    ...PokemonLearnsetFragment\n  }\n  generation8 {\n    ...PokemonLearnsetFragment\n  }\n}\n\nfragment PokemonLearnsetFragment on PokemonLearnset {\n  dreamworldMoves {\n    ...LearnsetMoveFragment\n  }\n  eggMoves {\n    ...LearnsetMoveFragment\n  }\n  eventMoves {\n    ...LearnsetMoveFragment\n  }\n  tmMoves {\n    ...LearnsetMoveFragment\n  }\n  tutorMoves {\n    ...LearnsetMoveFragment\n  }\n  virtualTransferMoves {\n    ...LearnsetMoveFragment\n  }\n  levelUpMoves {\n    ...LearnsetLevelUpMoveFragment\n  }\n}\n\nfragment LearnsetLevelUpMoveFragment on LearnsetLevelUpMove {\n  generation\n  level\n  move {\n    ...MoveFragment\n  }\n}\n\nfragment MoveFragment on Move {\n  key\n  accuracy\n  basePower\n  bulbapediaPage\n  category\n  contestType\n  desc\n  isFieldMove\n  isGMax\n  isNonstandard\n  isZ\n  maxMovePower\n  name\n  pp\n  priority\n  serebiiPage\n  shortDesc\n  smogonPage\n  target\n  type\n  zMovePower\n}\n\nfragment LearnsetMoveFragment on LearnsetMove {\n  generation\n  move {\n    ...MoveFragment\n  }\n}\n\nfragment AbilitiesFragment on Abilities {\n  first {\n    ...AbilityFragment\n  }\n  second {\n    ...AbilityFragment\n  }\n  hidden {\n    ...AbilityFragment\n  }\n  special {\n    ...AbilityFragment\n  }\n}\n\nfragment AbilityFragment on Ability {\n  name\n  key\n  bulbapediaPage\n  desc\n  isFieldAbility\n  serebiiPage\n  shortDesc\n  smogonPage\n  pokemonThatHaveThisAbility {\n    ...FullDataFragmentWithoutNested\n    learnsets {\n      ...GenerationalPokemonLearnsetFragment\n    }\n  }\n}\n\nfragment EvYieldsFragment on EvYields {\n  hp\n  attack\n  defense\n  specialattack\n  specialdefense\n  speed\n}\n\nfragment FlavorFragment on Flavor {\n  flavor\n  game\n}\n\nfragment GenderFragment on Gender {\n  female\n  male\n}\n\nfragment PokemonTypeFragment on PokemonType {\n  name\n  matchup {\n    attacking {\n      doubleEffectiveTypes\n      doubleResistedTypes\n      effectiveTypes\n      effectlessTypes\n      normalTypes\n      resistedTypes\n    }\n    defending {\n      doubleEffectiveTypes\n      doubleResistedTypes\n      effectiveTypes\n      effectlessTypes\n      normalTypes\n      resistedTypes\n    }\n  }\n}\n\nfragment StatsFragment on Stats {\n  hp\n  attack\n  defense\n  specialattack\n  specialdefense\n  speed\n}\n\nfragment CatchRateFragment on CatchRate {\n  base\n  percentageWithOrdinaryPokeballAtFullHealth\n}\n\nfragment FullDataFragmentWithoutNested on Pokemon {\n  key\n  eggGroups\n  evYields {\n    ...EvYieldsFragment\n  }\n  evolutionLevel\n  flavorTexts {\n    ...FlavorFragment\n  }\n  forme\n  formeLetter\n  gender {\n    ...GenderFragment\n  }\n  height\n  isEggObtainable\n  backSprite\n  levellingRate\n  maximumHatchTime\n  minimumHatchTime\n  num\n  otherFormes\n  serebiiPage\n  shinyBackSprite\n  shinySprite\n  smogonPage\n  baseForme\n  smogonTier\n  species\n  sprite\n  types {\n    ...PokemonTypeFragment\n  }\n  baseSpecies\n  baseStats {\n    ...StatsFragment\n  }\n  baseStatsTotal\n  bulbapediaPage\n  catchRate {\n    ...CatchRateFragment\n  }\n  color\n  cosmeticFormes\n  weight\n}\n\nfragment FullDataFragment on Pokemon {\n  abilities {\n    ...AbilitiesFragment\n  }\n  learnsets {\n    ...GenerationalPokemonLearnsetFragment\n  }\n  ...FullDataFragmentWithoutNested\n}\n\nfragment FullData on Pokemon {\n  ...FullDataFragment\n  evolutions {\n    ...FullDataFragment\n    evolutions {\n      ...FullDataFragment\n    }\n    preevolutions {\n      ...FullDataFragment\n    }\n  }\n  preevolutions {\n    ...FullDataFragment\n    evolutions {\n      ...FullDataFragment\n    }\n    preevolutions {\n      ...FullDataFragment\n    }\n  }\n}\n`;\n\nexport const defaultVariables = JSON.parse(\n  JSON.stringify({\n    pokemon: 'dragonair',\n    offsetFlavorTexts: 0,\n    takeFlavorTexts: 1,\n    reverseFlavorTexts: true\n  })\n);\n"],"mappings":"AAAO,MAAM,kBAAkxB,MAAM,mBAAmB,KAAK;AAAA,EACnC,KAAK,UAAU;AAAA,IACb,SAAS;AAAA,IACT,mBAAmB;AAAA,IACnB,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,EACtB,CAAC;AACH;","names":[]}