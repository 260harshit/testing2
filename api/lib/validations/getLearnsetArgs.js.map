{"version":3,"sources":["../../../src/lib/validations/getLearnsetArgs.ts"],"sourcesContent":["import type { NonNullish } from '#utils/utilTypes';\nimport { getPokemonSchema, type GetPokemonArgs } from '#validations/pokemonArgs/getPokemonArgs';\nimport { s, type SchemaOf } from '@sapphire/shapeshift';\nimport type { Nullish } from '@sapphire/utilities';\n\nexport interface GetLearnsetArgs extends GetPokemonArgs {\n  /**\n   * The moves to match against the Pok√©mon\n   */\n  moves: string[];\n  /**\n   * The generation filter to apply\n   */\n  generation: number | Nullish;\n}\n\nconst getLearnsetSchema: SchemaOf<GetLearnsetArgs> = getPokemonSchema.extend({\n  moves: s.array(s.string).unique.lengthGreaterThanOrEqual(1),\n  generation: s.number.int\n    .greaterThanOrEqual(1)\n    .lessThanOrEqual(9)\n    .nullish.transform((v) => v ?? 9)\n});\n\nexport function validateGetLearnsetArgs(args: GetLearnsetArgs): NonNullish<GetLearnsetArgs> {\n  return getLearnsetSchema.parse(args);\n}\n"],"mappings":";;AACA,SAAS,wBAA6C;AACtD,SAAS,SAAwB;AAcjC,MAAM,oBAA+C,iBAAiB,OAAO;AAAA,EAC3E,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,yBAAyB,CAAC;AAAA,EAC1D,YAAY,EAAE,OAAO,IAClB,mBAAmB,CAAC,EACpB,gBAAgB,CAAC,EACjB,QAAQ,UAAU,CAAC,MAAM,KAAK,CAAC;AACpC,CAAC;AAEM,SAAS,wBAAwB,MAAoD;AAC1F,SAAO,kBAAkB,MAAM,IAAI;AACrC;AAFgB;","names":[]}