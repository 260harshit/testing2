{"version":3,"sources":["../../../src/lib/resolvers/RootResolver.ts"],"sourcesContent":["import { getAbility, getFuzzyAbility } from '#resolvers/abilityResolvers';\nimport { getFuzzyItem, getItem } from '#resolvers/itemResolver';\nimport { getFuzzyLearnset, getLearnset } from '#resolvers/learnsetResolvers';\nimport { getFuzzyMove, getMove } from '#resolvers/moveResolvers';\nimport { getAllPokemon, getFuzzyPokemon, getPokemon, getPokemonByDexNumber } from '#resolvers/pokemonResolvers';\nimport { getTypeMatchup } from '#resolvers/typeResolver';\nimport { graphqlResolveInfoToRequestedFields } from '#utils/getRequestedFields';\nimport type { IExecutableSchemaDefinition } from '@graphql-tools/schema';\n\nexport const RootResolver: IExecutableSchemaDefinition['resolvers'] = {\n  Query: {\n    getAbility(_, args, _2, info) {\n      return getAbility(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getFuzzyAbility(_, args, _2, info) {\n      return getFuzzyAbility(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getPokemonByDexNumber(_, args, _2, info) {\n      return getPokemonByDexNumber(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getPokemon(_, args, _2, info) {\n      return getPokemon(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getFuzzyPokemon(_, args, _2, info) {\n      return getFuzzyPokemon(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getAllPokemon(_, args, _2, info) {\n      return getAllPokemon(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getItem(_, args, _2, info) {\n      return getItem(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getFuzzyItem(_, args, _2, info) {\n      return getFuzzyItem(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getMove(_, args, _2, info) {\n      return getMove(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getFuzzyMove(_, args, _2, info) {\n      return getFuzzyMove(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getTypeMatchup(_, args, _2, info) {\n      return getTypeMatchup(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getLearnset(_, args, _2, info) {\n      return getLearnset(args, graphqlResolveInfoToRequestedFields(info));\n    },\n    getFuzzyLearnset(_, args, _2, info) {\n      return getFuzzyLearnset(args, graphqlResolveInfoToRequestedFields(info));\n    }\n  }\n};\n"],"mappings":"AAAA,SAAS,YAAY,uBAAuB;AAC5C,SAAS,cAAc,eAAe;AACtC,SAAS,kBAAkB,mBAAmB;AAC9C,SAAS,cAAc,eAAe;AACtC,SAAS,eAAe,iBAAiB,YAAY,6BAA6B;AAClF,SAAS,sBAAsB;AAC/B,SAAS,2CAA2C;AAG7C,MAAM,eAAyD;AAAA,EACpE,OAAO;AAAA,IACL,WAAW,GAAG,MAAM,IAAI,MAAM;AAC5B,aAAO,WAAW,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACnE;AAAA,IACA,gBAAgB,GAAG,MAAM,IAAI,MAAM;AACjC,aAAO,gBAAgB,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACxE;AAAA,IACA,sBAAsB,GAAG,MAAM,IAAI,MAAM;AACvC,aAAO,sBAAsB,MAAM,oCAAoC,IAAI,CAAC;AAAA,IAC9E;AAAA,IACA,WAAW,GAAG,MAAM,IAAI,MAAM;AAC5B,aAAO,WAAW,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACnE;AAAA,IACA,gBAAgB,GAAG,MAAM,IAAI,MAAM;AACjC,aAAO,gBAAgB,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACxE;AAAA,IACA,cAAc,GAAG,MAAM,IAAI,MAAM;AAC/B,aAAO,cAAc,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACtE;AAAA,IACA,QAAQ,GAAG,MAAM,IAAI,MAAM;AACzB,aAAO,QAAQ,MAAM,oCAAoC,IAAI,CAAC;AAAA,IAChE;AAAA,IACA,aAAa,GAAG,MAAM,IAAI,MAAM;AAC9B,aAAO,aAAa,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACrE;AAAA,IACA,QAAQ,GAAG,MAAM,IAAI,MAAM;AACzB,aAAO,QAAQ,MAAM,oCAAoC,IAAI,CAAC;AAAA,IAChE;AAAA,IACA,aAAa,GAAG,MAAM,IAAI,MAAM;AAC9B,aAAO,aAAa,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACrE;AAAA,IACA,eAAe,GAAG,MAAM,IAAI,MAAM;AAChC,aAAO,eAAe,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACvE;AAAA,IACA,YAAY,GAAG,MAAM,IAAI,MAAM;AAC7B,aAAO,YAAY,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACpE;AAAA,IACA,iBAAiB,GAAG,MAAM,IAAI,MAAM;AAClC,aAAO,iBAAiB,MAAM,oCAAoC,IAAI,CAAC;AAAA,IACzE;AAAA,EACF;AACF;","names":[]}