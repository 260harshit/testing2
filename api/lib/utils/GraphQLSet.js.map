{"version":3,"sources":["../../../src/lib/utils/GraphQLSet.ts"],"sourcesContent":["import { cast } from '@sapphire/utilities';\n\nexport interface GraphQLSetConstructor {\n  new (): GraphQLSet<unknown>;\n\n  new <V>(entries?: ReadonlyArray<V> | null): GraphQLSet<V>;\n\n  new <V>(iterable: Iterable<V>): GraphQLSet<V>;\n\n  readonly [Symbol.species]: GraphQLSetConstructor;\n\n  readonly prototype: GraphQLSet<unknown>;\n}\n\n/**\n * A Set with additional utility methods. This is used throughout Graphql-Pokemon rather than Arrays for anything that has\n * needs to have unique entries, for significantly improved performance and ease-of-use.\n * @extends {Set}\n * @property size - The amount of elements in this GraphQLSet.\n */\nexport class GraphQLSet<V> extends Set<V> {\n  public constructor(entries?: ReadonlyArray<V> | null) {\n    super(entries);\n  }\n\n  /**\n   * Similar to\n   * [Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n   * but returns a GraphQLSet instead of an Array.\n   * Also instead of receiving a callback predicate this will use `String.startsWith`.\n   *\n   * If the value starts with the given {@link checkString}, and {@link removeCheckString} is true,\n   * then that {@link checkString} is removed from the start of the value\n   * and the remaining value is added to the result.\n   *\n   * @param checkString The string that will be used in the `.startsWith` check\n   * @param removeCheckString Whether the {@link checkString} should be removed from the start of the value\n   * @example graphqlSet.filter('parentKey.');\n   */\n  public filterStartsWith<T>(checkString: `${string}.`, removeCheckString = false): GraphQLSet<T> {\n    const results = new GraphQLSet<T>();\n\n    for (const val of this) {\n      if (typeof val === 'string' && val.startsWith(checkString)) {\n        const resolvedValue = cast<T>(removeCheckString ? val.replace(checkString, '') : val);\n        results.add(resolvedValue);\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Similar to\n   * [Set.has()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/has),\n   * but checks whether the set that has a value that starts with the given {@link checkString}.\n   * This will use `String.startsWith`.\n   *\n   * @param checkString The string that will be used in the `.startsWith` check\n   * @example graphqlSet.hasStartsWith('parentKey.');\n   */\n  public hasStartsWith(checkString: `${string}.`): boolean {\n    for (const val of this) {\n      if (typeof val === 'string' && val.startsWith(checkString)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n"],"mappings":";;AAAA,SAAS,YAAY;AAoBd,MAAM,mBAAsB,IAAO;AAAA,EACjC,YAAY,SAAmC;AACpD,UAAM,OAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBO,iBAAoB,aAA2B,oBAAoB,OAAsB;AAC9F,UAAM,UAAU,IAAI,WAAc;AAElC,eAAW,OAAO,MAAM;AACtB,UAAI,OAAO,QAAQ,YAAY,IAAI,WAAW,WAAW,GAAG;AAC1D,cAAM,gBAAgB,KAAQ,oBAAoB,IAAI,QAAQ,aAAa,EAAE,IAAI,GAAG;AACpF,gBAAQ,IAAI,aAAa;AAAA,MAC3B;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWO,cAAc,aAAoC;AACvD,eAAW,OAAO,MAAM;AACtB,UAAI,OAAO,QAAQ,YAAY,IAAI,WAAW,WAAW,GAAG;AAC1D,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF;AAlDa;","names":[]}