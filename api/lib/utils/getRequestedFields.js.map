{"version":3,"sources":["../../../src/lib/utils/getRequestedFields.ts"],"sourcesContent":["import { GraphQLSet } from '#utils/GraphQLSet';\nimport type { GraphQLResolveInfo } from 'graphql';\nimport { parseResolveInfo, type FieldsByTypeName, type ResolveTree } from 'graphql-parse-resolve-info';\n\nfunction infoIsResolveTree(info?: ResolveTree | FieldsByTypeName | null): info is ResolveTree {\n  if (!info) return false;\n  return (info as ResolveTree).fieldsByTypeName !== undefined;\n}\n\nfunction collectRequestedFields<T extends string>(\n  fieldsToParse: Record<string, ResolveTree>,\n  collectedFields: GraphQLSet<T> = new GraphQLSet<T>(),\n  parent = ''\n): GraphQLSet<T> {\n  for (const fieldValue of Object.values(fieldsToParse)) {\n    if (Object.keys(fieldValue.fieldsByTypeName).length === 0) {\n      if (parent && !collectedFields.has(parent as T)) {\n        collectedFields.add(parent as T);\n      }\n      collectedFields.add(`${parent ? `${parent}.` : ''}${fieldValue.name}` as T);\n    } else {\n      collectRequestedFields(Object.values(fieldValue.fieldsByTypeName)[0], collectedFields, `${parent ? `${parent}.` : ''}${fieldValue.name}`);\n    }\n  }\n\n  return collectedFields;\n}\n\nexport function graphqlResolveInfoToRequestedFields<T extends string>(info: GraphQLResolveInfo): GraphQLSet<T> {\n  const resolvedInfo = parseResolveInfo(info, { deep: true });\n  if (infoIsResolveTree(resolvedInfo)) {\n    return collectRequestedFields<T>(Object.values(resolvedInfo.fieldsByTypeName)[0]);\n  }\n\n  return new GraphQLSet<T>();\n}\n"],"mappings":";;AAAA,SAAS,kBAAkB;AAE3B,SAAS,wBAAiE;AAE1E,SAAS,kBAAkB,MAAmE;AAC5F,MAAI,CAAC;AAAM,WAAO;AAClB,SAAQ,KAAqB,qBAAqB;AACpD;AAHS;AAKT,SAAS,uBACP,eACA,kBAAiC,IAAI,WAAc,GACnD,SAAS,IACM;AACf,aAAW,cAAc,OAAO,OAAO,aAAa,GAAG;AACrD,QAAI,OAAO,KAAK,WAAW,gBAAgB,EAAE,WAAW,GAAG;AACzD,UAAI,UAAU,CAAC,gBAAgB,IAAI,MAAW,GAAG;AAC/C,wBAAgB,IAAI,MAAW;AAAA,MACjC;AACA,sBAAgB,IAAI,GAAG,SAAS,GAAG,YAAY,KAAK,WAAW,MAAW;AAAA,IAC5E,OAAO;AACL,6BAAuB,OAAO,OAAO,WAAW,gBAAgB,EAAE,CAAC,GAAG,iBAAiB,GAAG,SAAS,GAAG,YAAY,KAAK,WAAW,MAAM;AAAA,IAC1I;AAAA,EACF;AAEA,SAAO;AACT;AAjBS;AAmBF,SAAS,oCAAsD,MAAyC;AAC7G,QAAM,eAAe,iBAAiB,MAAM,EAAE,MAAM,KAAK,CAAC;AAC1D,MAAI,kBAAkB,YAAY,GAAG;AACnC,WAAO,uBAA0B,OAAO,OAAO,aAAa,gBAAgB,EAAE,CAAC,CAAC;AAAA,EAClF;AAEA,SAAO,IAAI,WAAc;AAC3B;AAPgB;","names":[]}