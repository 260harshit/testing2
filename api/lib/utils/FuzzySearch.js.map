{"version":3,"sources":["../../../src/lib/utils/FuzzySearch.ts"],"sourcesContent":["import type { Collection } from '@discordjs/collection';\nimport { jaroWinkler } from '@skyra/jaro-winkler';\n\nexport class FuzzySearch<K extends string, V> {\n  readonly #collection: Collection<K, V>;\n  readonly #accessKeys: (keyof V)[];\n\n  public constructor(collection: Collection<K, V>, keys: (keyof V)[]) {\n    this.#collection = collection;\n    this.#accessKeys = keys;\n  }\n\n  public runFuzzy(query: string): V[] {\n    const results: [K, V, number][] = [];\n    const threshold = 0.3;\n\n    let current: V[keyof V];\n    let lowerCaseName: string;\n    let similarity: number;\n    let almostExacts = 0;\n\n    // Loop over all items in the collection\n    for (const [key, value] of this.#collection.entries()) {\n      /** Entries of the same pokemon but from different accessKeys */\n      const resultsFromAccessKeys: [K, V, number][] = [];\n\n      // Loop over all provided access keys\n      for (const accessKey of this.#accessKeys) {\n        current = value[accessKey];\n\n        // If the value at the current accessKey is an array then we need to loop over its values\n        if (Array.isArray(current)) {\n          /** Entries from the same pokemon but from different entries in the array at the current accessKey (i.e. aliases) */\n          const resultsFromArray: [K, V, number][] = [];\n\n          // Loop over each value in the array\n          for (const arrayEntry of current) {\n            lowerCaseName = arrayEntry.toLowerCase();\n\n            // If lowercase result, go next\n            if (lowerCaseName === query) {\n              similarity = 1;\n            } else {\n              similarity = jaroWinkler(query, lowerCaseName);\n            }\n\n            // If the similarity is bigger than the threshold, skip\n            if (similarity < threshold) continue;\n\n            // Push the results\n            resultsFromArray.push([key, value, similarity]);\n\n            // Continue earlier\n            if (similarity >= 0.9) almostExacts++;\n            if (almostExacts === 10) break;\n          }\n\n          if (resultsFromArray.length) {\n            const sorted = resultsFromArray.sort((a, b) => b[2] - a[2]);\n\n            resultsFromAccessKeys.push(sorted[0]);\n          }\n        } else if (typeof current === 'string') {\n          lowerCaseName = current.toLowerCase();\n\n          // If lowercase result, go next\n          if (lowerCaseName === query) {\n            similarity = 1;\n          } else {\n            similarity = jaroWinkler(query, lowerCaseName);\n          }\n\n          // If the similarity is bigger than the threshold, skip\n          if (similarity < threshold) continue;\n\n          // Push the results\n          resultsFromAccessKeys.push([key, value, similarity]);\n\n          // Continue earlier\n          if (similarity >= 0.9) almostExacts++;\n          if (almostExacts === 10) break;\n        }\n      }\n\n      if (resultsFromAccessKeys.length) {\n        const sorted = resultsFromAccessKeys.sort((a, b) => b[2] - a[2]);\n\n        results.push(sorted[0]);\n      }\n    }\n\n    if (!results.length) return [];\n\n    const finalSortedResults = results.sort((a, b) => b[2] - a[2]);\n\n    return finalSortedResults.map(([, value]) => value);\n  }\n}\n"],"mappings":";;AACA,SAAS,mBAAmB;AAErB,MAAM,YAAiC;AAAA,EACnC;AAAA,EACA;AAAA,EAEF,YAAY,YAA8B,MAAmB;AAClE,SAAK,cAAc;AACnB,SAAK,cAAc;AAAA,EACrB;AAAA,EAEO,SAAS,OAAoB;AAClC,UAAM,UAA4B,CAAC;AACnC,UAAM,YAAY;AAElB,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI,eAAe;AAGnB,eAAW,CAAC,KAAK,KAAK,KAAK,KAAK,YAAY,QAAQ,GAAG;AAErD,YAAM,wBAA0C,CAAC;AAGjD,iBAAW,aAAa,KAAK,aAAa;AACxC,kBAAU,MAAM,SAAS;AAGzB,YAAI,MAAM,QAAQ,OAAO,GAAG;AAE1B,gBAAM,mBAAqC,CAAC;AAG5C,qBAAW,cAAc,SAAS;AAChC,4BAAgB,WAAW,YAAY;AAGvC,gBAAI,kBAAkB,OAAO;AAC3B,2BAAa;AAAA,YACf,OAAO;AACL,2BAAa,YAAY,OAAO,aAAa;AAAA,YAC/C;AAGA,gBAAI,aAAa;AAAW;AAG5B,6BAAiB,KAAK,CAAC,KAAK,OAAO,UAAU,CAAC;AAG9C,gBAAI,cAAc;AAAK;AACvB,gBAAI,iBAAiB;AAAI;AAAA,UAC3B;AAEA,cAAI,iBAAiB,QAAQ;AAC3B,kBAAM,SAAS,iBAAiB,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;AAE1D,kCAAsB,KAAK,OAAO,CAAC,CAAC;AAAA,UACtC;AAAA,QACF,WAAW,OAAO,YAAY,UAAU;AACtC,0BAAgB,QAAQ,YAAY;AAGpC,cAAI,kBAAkB,OAAO;AAC3B,yBAAa;AAAA,UACf,OAAO;AACL,yBAAa,YAAY,OAAO,aAAa;AAAA,UAC/C;AAGA,cAAI,aAAa;AAAW;AAG5B,gCAAsB,KAAK,CAAC,KAAK,OAAO,UAAU,CAAC;AAGnD,cAAI,cAAc;AAAK;AACvB,cAAI,iBAAiB;AAAI;AAAA,QAC3B;AAAA,MACF;AAEA,UAAI,sBAAsB,QAAQ;AAChC,cAAM,SAAS,sBAAsB,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;AAE/D,gBAAQ,KAAK,OAAO,CAAC,CAAC;AAAA,MACxB;AAAA,IACF;AAEA,QAAI,CAAC,QAAQ;AAAQ,aAAO,CAAC;AAE7B,UAAM,qBAAqB,QAAQ,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;AAE7D,WAAO,mBAAmB,IAAI,CAAC,CAAC,EAAE,KAAK,MAAM,KAAK;AAAA,EACpD;AACF;AA9Fa;","names":[]}