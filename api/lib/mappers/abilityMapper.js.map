{"version":3,"sources":["../../../src/lib/mappers/abilityMapper.ts"],"sourcesContent":["import { pokedex } from '#assets/pokedex';\nimport type { PokemonTypes } from '#assets/pokemon-source';\nimport { mapPokemonDataToPokemonGraphQL, PokemonReferencedCallIdentifier } from '#mappers/pokemonMapper';\nimport type { Ability, Pokemon } from '#types';\nimport { addPropertyToObjectFieldBased } from '#utils/addPropertyToObject';\nimport type { GraphQLSet } from '#utils/GraphQLSet';\nimport { isNullishOrEmpty, toTitleCase } from '@sapphire/utilities';\n\nexport function mapAbilityDataToAbilityGraphQL({\n  data,\n  requestedFields,\n  referencedCall = AbilityReferencedCallIdentifier.None\n}: MapAbilityDataToAbilityGraphQLParameters): Ability {\n  const abilityObject: Ability = {} as Ability;\n\n  addPropertyToObjectFieldBased({ objectTarget: abilityObject, propertyKey: 'key', propertyValue: data.key, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: abilityObject, propertyKey: 'name', propertyValue: data.name, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: abilityObject, propertyKey: 'desc', propertyValue: data.desc, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: abilityObject, propertyKey: 'shortDesc', propertyValue: data.shortDesc, requestedFields });\n  addPropertyToObjectFieldBased({\n    objectTarget: abilityObject,\n    propertyKey: 'isFieldAbility',\n    propertyValue: data.isFieldAbility,\n    requestedFields\n  });\n  addPropertyToObjectFieldBased({\n    objectTarget: abilityObject,\n    propertyKey: 'bulbapediaPage',\n    propertyValue: `https://bulbapedia.bulbagarden.net/wiki/${toTitleCase(data.name).replace(/ /g, '_')}_(Ability)`,\n    requestedFields\n  });\n  addPropertyToObjectFieldBased({\n    objectTarget: abilityObject,\n    propertyKey: 'serebiiPage',\n    propertyValue: `https://www.serebii.net/abilitydex/${data.name.replace(/ /g, '_').toLowerCase()}.shtml`,\n    requestedFields\n  });\n  addPropertyToObjectFieldBased({\n    objectTarget: abilityObject,\n    propertyKey: 'smogonPage',\n    propertyValue: `https://www.smogon.com/dex/ss/abilities/${data.name.toLowerCase().replace(/ /g, '_')}`,\n    requestedFields\n  });\n\n  if (requestedFields.hasStartsWith('pokemonThatHaveThisAbility.')) {\n    if (referencedCall === AbilityReferencedCallIdentifier.PokemonToAbility) {\n      Reflect.set(abilityObject, 'pokemonThatHaveThisAbility', []);\n    } else {\n      const pokemonThatHaveThisAbility = pokedex.filter(\n        (pokemon) =>\n          (!isNullishOrEmpty(pokemon.abilities.first) && pokemon.abilities.first === data.key) ||\n          (!isNullishOrEmpty(pokemon.abilities.second) && pokemon.abilities.second === data.key) ||\n          (!isNullishOrEmpty(pokemon.abilities.hidden) && pokemon.abilities.hidden === data.key) ||\n          (!isNullishOrEmpty(pokemon.abilities.special) && pokemon.abilities.special === data.key)\n      );\n\n      let pokemonData: Pokemon[] = [];\n\n      if (pokemonThatHaveThisAbility.size) {\n        const pokemonFields = requestedFields.filterStartsWith<keyof Pokemon>('pokemonThatHaveThisAbility.', true);\n        pokemonData = pokemonThatHaveThisAbility.map((pokemon) =>\n          mapPokemonDataToPokemonGraphQL({\n            data: pokemon,\n            requestedFields: pokemonFields,\n            referencedCall: PokemonReferencedCallIdentifier.AbilityToPokemon,\n            offsetFlavorTexts: 0,\n            takeFlavorTexts: 1,\n            reverseFlavorTexts: true\n          })\n        );\n      }\n\n      Reflect.set(abilityObject, 'pokemonThatHaveThisAbility', pokemonData);\n    }\n  }\n\n  return abilityObject;\n}\n\nexport const enum AbilityReferencedCallIdentifier {\n  None = 'none',\n  PokemonToAbility = 'pokemonToAbility'\n}\n\ninterface MapAbilityDataToAbilityGraphQLParameters {\n  data: PokemonTypes.Ability;\n  requestedFields: GraphQLSet<keyof Ability>;\n  referencedCall?: AbilityReferencedCallIdentifier;\n}\n"],"mappings":";;AAAA,SAAS,eAAe;AAExB,SAAS,gCAAgC,uCAAuC;AAEhF,SAAS,qCAAqC;AAE9C,SAAS,kBAAkB,mBAAmB;AAEvC,SAAS,+BAA+B;AAAA,EAC7C;AAAA,EACA;AAAA,EACA,iBAAiB;AACnB,GAAsD;AACpD,QAAM,gBAAyB,CAAC;AAEhC,gCAA8B,EAAE,cAAc,eAAe,aAAa,OAAO,eAAe,KAAK,KAAK,gBAAgB,CAAC;AAC3H,gCAA8B,EAAE,cAAc,eAAe,aAAa,QAAQ,eAAe,KAAK,MAAM,gBAAgB,CAAC;AAC7H,gCAA8B,EAAE,cAAc,eAAe,aAAa,QAAQ,eAAe,KAAK,MAAM,gBAAgB,CAAC;AAC7H,gCAA8B,EAAE,cAAc,eAAe,aAAa,aAAa,eAAe,KAAK,WAAW,gBAAgB,CAAC;AACvI,gCAA8B;AAAA,IAC5B,cAAc;AAAA,IACd,aAAa;AAAA,IACb,eAAe,KAAK;AAAA,IACpB;AAAA,EACF,CAAC;AACD,gCAA8B;AAAA,IAC5B,cAAc;AAAA,IACd,aAAa;AAAA,IACb,eAAe,2CAA2C,YAAY,KAAK,IAAI,EAAE,QAAQ,MAAM,GAAG;AAAA,IAClG;AAAA,EACF,CAAC;AACD,gCAA8B;AAAA,IAC5B,cAAc;AAAA,IACd,aAAa;AAAA,IACb,eAAe,sCAAsC,KAAK,KAAK,QAAQ,MAAM,GAAG,EAAE,YAAY;AAAA,IAC9F;AAAA,EACF,CAAC;AACD,gCAA8B;AAAA,IAC5B,cAAc;AAAA,IACd,aAAa;AAAA,IACb,eAAe,2CAA2C,KAAK,KAAK,YAAY,EAAE,QAAQ,MAAM,GAAG;AAAA,IACnG;AAAA,EACF,CAAC;AAED,MAAI,gBAAgB,cAAc,6BAA6B,GAAG;AAChE,QAAI,mBAAmB,2CAAkD;AACvE,cAAQ,IAAI,eAAe,8BAA8B,CAAC,CAAC;AAAA,IAC7D,OAAO;AACL,YAAM,6BAA6B,QAAQ;AAAA,QACzC,CAAC,YACE,CAAC,iBAAiB,QAAQ,UAAU,KAAK,KAAK,QAAQ,UAAU,UAAU,KAAK,OAC/E,CAAC,iBAAiB,QAAQ,UAAU,MAAM,KAAK,QAAQ,UAAU,WAAW,KAAK,OACjF,CAAC,iBAAiB,QAAQ,UAAU,MAAM,KAAK,QAAQ,UAAU,WAAW,KAAK,OACjF,CAAC,iBAAiB,QAAQ,UAAU,OAAO,KAAK,QAAQ,UAAU,YAAY,KAAK;AAAA,MACxF;AAEA,UAAI,cAAyB,CAAC;AAE9B,UAAI,2BAA2B,MAAM;AACnC,cAAM,gBAAgB,gBAAgB,iBAAgC,+BAA+B,IAAI;AACzG,sBAAc,2BAA2B;AAAA,UAAI,CAAC,YAC5C,+BAA+B;AAAA,YAC7B,MAAM;AAAA,YACN,iBAAiB;AAAA,YACjB,gBAAgB,gCAAgC;AAAA,YAChD,mBAAmB;AAAA,YACnB,iBAAiB;AAAA,YACjB,oBAAoB;AAAA,UACtB,CAAC;AAAA,QACH;AAAA,MACF;AAEA,cAAQ,IAAI,eAAe,8BAA8B,WAAW;AAAA,IACtE;AAAA,EACF;AAEA,SAAO;AACT;AArEgB;AAuET,IAAW,kCAAX,kBAAWA,qCAAX;AACL,EAAAA,iCAAA,UAAO;AACP,EAAAA,iCAAA,sBAAmB;AAFH,SAAAA;AAAA,GAAA;","names":["AbilityReferencedCallIdentifier"]}