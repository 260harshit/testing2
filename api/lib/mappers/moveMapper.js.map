{"version":3,"sources":["../../../src/lib/mappers/moveMapper.ts"],"sourcesContent":["import type { PokemonTypes } from '#assets/pokemon-source';\nimport type { Move } from '#types';\nimport { addPropertyToObjectFieldBased } from '#utils/addPropertyToObject';\nimport type { GraphQLSet } from '#utils/GraphQLSet';\nimport { parseZCrystal, toLowerHyphenCase, toLowerSingleWordCase, toTitleSnakeCaseWithoutHyphenConvert } from '#utils/util';\n\nexport function mapMoveDataToMoveGraphQL({ data, requestedFields }: MapMoveDataToMoveGraphQLParameters): Move {\n  const moveObject: Move = {} as Move;\n\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'key', propertyValue: data.key, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'name', propertyValue: data.name, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'desc', propertyValue: data.desc, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'shortDesc', propertyValue: data.shortDesc, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'type', propertyValue: data.type, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'contestType', propertyValue: data.contestType, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'basePower', propertyValue: data.basePower, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'pp', propertyValue: data.pp, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'category', propertyValue: data.category, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'accuracy', propertyValue: data.accuracy, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'priority', propertyValue: data.priority, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'target', propertyValue: data.target, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'isNonstandard', propertyValue: data.isNonstandard, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'isGMax', propertyValue: data.isGMax, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'isZ', propertyValue: parseZCrystal(data.isZ), requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'isFieldMove', propertyValue: data.isFieldMove, requestedFields });\n  addPropertyToObjectFieldBased({ objectTarget: moveObject, propertyKey: 'maxMovePower', propertyValue: data.maxMovePower, requestedFields });\n  addPropertyToObjectFieldBased({\n    objectTarget: moveObject,\n    propertyKey: 'zMovePower',\n    propertyValue: parseZMovePower(data.basePower, data.zMovePower),\n    requestedFields\n  });\n  addPropertyToObjectFieldBased({\n    objectTarget: moveObject,\n    propertyKey: 'serebiiPage',\n    propertyValue: `https://www.serebii.net/attackdex-swsh/${toLowerSingleWordCase(data.name)}.shtml`,\n    requestedFields\n  });\n  addPropertyToObjectFieldBased({\n    objectTarget: moveObject,\n    propertyKey: 'bulbapediaPage',\n    propertyValue: `https://bulbapedia.bulbagarden.net/wiki/${toTitleSnakeCaseWithoutHyphenConvert(data.name)}_(move)`,\n    requestedFields\n  });\n  addPropertyToObjectFieldBased({\n    objectTarget: moveObject,\n    propertyKey: 'smogonPage',\n    propertyValue: `https://www.smogon.com/dex/ss/moves/${toLowerHyphenCase(data.name)}`,\n    requestedFields\n  });\n\n  return moveObject;\n}\n\n/**\n * Converts basePower and zMovePower to the correct Z-Move power, using datamined conversion table seen below.\n *\n * | Base move power  | Z-Move power |\n * |------------------|--------------|\n * | 0-55             | 100          |\n * | 60-65            | 120          |\n * | 70-75            | 140          |\n * | 80-85            | 160          |\n * | 90-95            | 175          |\n * | 100              | 180          |\n * | 110              | 185          |\n * | 120-125          | 190          |\n * | 130              | 195          |\n * | 140+             | 200          |\n * @param basePower The basepower of a move\n * @param zMovePower The z-move power of a move, if specified it is preferred.\n */\nfunction parseZMovePower(basePower: string, zMovePower: number | undefined): number {\n  // If zMovePower was defined on the move data then just return that value\n  if (typeof zMovePower === 'number') return zMovePower;\n\n  // If the basePower is 0 (status moves) then return 0\n  if (basePower === '0') return 0;\n\n  const basePowerAsNumber = Number(basePower);\n\n  if (basePowerAsNumber >= 0 && basePowerAsNumber <= 55) return 100;\n  if (basePowerAsNumber >= 60 && basePowerAsNumber <= 65) return 120;\n\n  if (basePowerAsNumber >= 70 && basePowerAsNumber <= 75) return 140;\n  if (basePowerAsNumber >= 80 && basePowerAsNumber <= 85) return 160;\n  if (basePowerAsNumber >= 90 && basePowerAsNumber <= 95) return 175;\n  if (basePowerAsNumber === 100) return 180;\n  if (basePowerAsNumber === 110) return 185;\n  if (basePowerAsNumber >= 120 && basePowerAsNumber <= 125) return 190;\n  if (basePowerAsNumber === 130) return 195;\n  if (basePowerAsNumber >= 140) return 200;\n\n  // If none of the cases matched then we return 0. This can happen if the move cannot be a Z-move\n  // Which is the case for moves that were exclusive to a game that didn't feature Z-Moves\n  // Such as \"Pika Papow\" and \"Veevee Volley\"\n  return 0;\n}\n\ninterface MapMoveDataToMoveGraphQLParameters {\n  data: PokemonTypes.Move;\n  requestedFields: GraphQLSet<keyof Move>;\n}\n"],"mappings":";;AAEA,SAAS,qCAAqC;AAE9C,SAAS,eAAe,mBAAmB,uBAAuB,4CAA4C;AAEvG,SAAS,yBAAyB,EAAE,MAAM,gBAAgB,GAA6C;AAC5G,QAAM,aAAmB,CAAC;AAE1B,gCAA8B,EAAE,cAAc,YAAY,aAAa,OAAO,eAAe,KAAK,KAAK,gBAAgB,CAAC;AACxH,gCAA8B,EAAE,cAAc,YAAY,aAAa,QAAQ,eAAe,KAAK,MAAM,gBAAgB,CAAC;AAC1H,gCAA8B,EAAE,cAAc,YAAY,aAAa,QAAQ,eAAe,KAAK,MAAM,gBAAgB,CAAC;AAC1H,gCAA8B,EAAE,cAAc,YAAY,aAAa,aAAa,eAAe,KAAK,WAAW,gBAAgB,CAAC;AACpI,gCAA8B,EAAE,cAAc,YAAY,aAAa,QAAQ,eAAe,KAAK,MAAM,gBAAgB,CAAC;AAC1H,gCAA8B,EAAE,cAAc,YAAY,aAAa,eAAe,eAAe,KAAK,aAAa,gBAAgB,CAAC;AACxI,gCAA8B,EAAE,cAAc,YAAY,aAAa,aAAa,eAAe,KAAK,WAAW,gBAAgB,CAAC;AACpI,gCAA8B,EAAE,cAAc,YAAY,aAAa,MAAM,eAAe,KAAK,IAAI,gBAAgB,CAAC;AACtH,gCAA8B,EAAE,cAAc,YAAY,aAAa,YAAY,eAAe,KAAK,UAAU,gBAAgB,CAAC;AAClI,gCAA8B,EAAE,cAAc,YAAY,aAAa,YAAY,eAAe,KAAK,UAAU,gBAAgB,CAAC;AAClI,gCAA8B,EAAE,cAAc,YAAY,aAAa,YAAY,eAAe,KAAK,UAAU,gBAAgB,CAAC;AAClI,gCAA8B,EAAE,cAAc,YAAY,aAAa,UAAU,eAAe,KAAK,QAAQ,gBAAgB,CAAC;AAC9H,gCAA8B,EAAE,cAAc,YAAY,aAAa,iBAAiB,eAAe,KAAK,eAAe,gBAAgB,CAAC;AAC5I,gCAA8B,EAAE,cAAc,YAAY,aAAa,UAAU,eAAe,KAAK,QAAQ,gBAAgB,CAAC;AAC9H,gCAA8B,EAAE,cAAc,YAAY,aAAa,OAAO,eAAe,cAAc,KAAK,GAAG,GAAG,gBAAgB,CAAC;AACvI,gCAA8B,EAAE,cAAc,YAAY,aAAa,eAAe,eAAe,KAAK,aAAa,gBAAgB,CAAC;AACxI,gCAA8B,EAAE,cAAc,YAAY,aAAa,gBAAgB,eAAe,KAAK,cAAc,gBAAgB,CAAC;AAC1I,gCAA8B;AAAA,IAC5B,cAAc;AAAA,IACd,aAAa;AAAA,IACb,eAAe,gBAAgB,KAAK,WAAW,KAAK,UAAU;AAAA,IAC9D;AAAA,EACF,CAAC;AACD,gCAA8B;AAAA,IAC5B,cAAc;AAAA,IACd,aAAa;AAAA,IACb,eAAe,0CAA0C,sBAAsB,KAAK,IAAI;AAAA,IACxF;AAAA,EACF,CAAC;AACD,gCAA8B;AAAA,IAC5B,cAAc;AAAA,IACd,aAAa;AAAA,IACb,eAAe,2CAA2C,qCAAqC,KAAK,IAAI;AAAA,IACxG;AAAA,EACF,CAAC;AACD,gCAA8B;AAAA,IAC5B,cAAc;AAAA,IACd,aAAa;AAAA,IACb,eAAe,uCAAuC,kBAAkB,KAAK,IAAI;AAAA,IACjF;AAAA,EACF,CAAC;AAED,SAAO;AACT;AA9CgB;AAkEhB,SAAS,gBAAgB,WAAmB,YAAwC;AAElF,MAAI,OAAO,eAAe;AAAU,WAAO;AAG3C,MAAI,cAAc;AAAK,WAAO;AAE9B,QAAM,oBAAoB,OAAO,SAAS;AAE1C,MAAI,qBAAqB,KAAK,qBAAqB;AAAI,WAAO;AAC9D,MAAI,qBAAqB,MAAM,qBAAqB;AAAI,WAAO;AAE/D,MAAI,qBAAqB,MAAM,qBAAqB;AAAI,WAAO;AAC/D,MAAI,qBAAqB,MAAM,qBAAqB;AAAI,WAAO;AAC/D,MAAI,qBAAqB,MAAM,qBAAqB;AAAI,WAAO;AAC/D,MAAI,sBAAsB;AAAK,WAAO;AACtC,MAAI,sBAAsB;AAAK,WAAO;AACtC,MAAI,qBAAqB,OAAO,qBAAqB;AAAK,WAAO;AACjE,MAAI,sBAAsB;AAAK,WAAO;AACtC,MAAI,qBAAqB;AAAK,WAAO;AAKrC,SAAO;AACT;AAzBS;","names":[]}